highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
# plot polyploidy
plot(0,0,col="white",
ylim=c(-5,800),
xlim=c(-.002,.002),
xlab=expression(paste(Delta, R[polyploidy])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0003), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
# plot polyploidy
plot(0,0,col="white",
ylim=c(-5,800),
xlim=c(-.002,.002),
xlab=expression(paste(Delta, R[polyploidy])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0004), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$pol1 - rates$pol2,, bw = .0004), lty=3)
lines(y=c(-5,-5),x=c(max(lows),min(highs)))
plot(0,0,col="white",
ylim=c(-5,1200),
xlim=c(-.002,.002),
xlab=expression(paste(Delta, R[polyploidy])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0001), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$pol1 - rates$pol2,, bw = .0001), lty=3)
lines(y=c(-5,-5),x=c(max(lows),min(highs)))
# plot polyploidy
plot(0,0,col="white",
ylim=c(-5,1400),
xlim=c(-.002,.002),
xlab=expression(paste(Delta, R[polyploidy])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0001), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$pol1 - rates$pol2,, bw = .0001), lty=3)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
# get fissions
library(coda)
dists <- matrix(NA,2500,1000)
for(i in 1:1000){
sel.trees <- sample(1:100, replace=T)
sel.rows <- as.vector(treerows[,sel.trees])
dists[, i] <- rates$asc1[sel.rows] - rates$asc2[sel.rows]
}
par(mfcol=c(1,3))
# plot fissions
library(viridis)
plot(0,0,col="white",
ylim=c(-5,105),
xlim=c(-.025,.04),
xlab=expression(paste(Delta, R[fission])),
ylab="density")
cols <- sample(viridis(1000))
lows <- highs <- c()
for(i in 1:1000){
lines(density(dists[, i], bw = .0015), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$asc1 - rates$asc2,, bw = .0015), lty=3)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
# get fusions
dists <- matrix(NA,2500,1000)
for(i in 1:1000){
sel.trees <- sample(1:100, replace=T)
sel.rows <- as.vector(treerows[,sel.trees])
dists[, i] <- rates$desc1[sel.rows] - rates$desc2[sel.rows]
}
# plot fusions
plot(0,0,col="white",
ylim=c(-5,165),
xlim=c(-.025,.03),
xlab=expression(paste(Delta, R[fusion])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0015), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$desc1 - rates$desc2,, bw = .0015), lty=3)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
# get polyploidy
dists <- matrix(NA,2500,1000)
for(i in 1:1000){
sel.trees <- sample(1:100, replace=T)
sel.rows <- as.vector(treerows[,sel.trees])
dists[, i] <- rates$pol1[sel.rows] - rates$pol2[sel.rows]
}
# plot polyploidy
plot(0,0,col="white",
ylim=c(-5,1400),
xlim=c(-.002,.002),
xlab=expression(paste(Delta, R[polyploidy])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0001), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$pol1 - rates$pol2,, bw = .0001), lty=3)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
# get fissions
library(coda)
dists <- matrix(NA,2500,1000)
for(i in 1:1000){
sel.trees <- sample(1:100, replace=T)
sel.rows <- as.vector(treerows[,sel.trees])
dists[, i] <- rates$asc1[sel.rows] - rates$asc2[sel.rows]
}
par(mfcol=c(1,3))
# plot fissions
library(viridis)
plot(0,0,col="white",
ylim=c(-5,105),
xlim=c(-.025,.04),
xlab=expression(paste(Delta, R[fission])),
ylab="density")
cols <- sample(viridis(1000))
lows <- highs <- c()
for(i in 1:1000){
lines(density(dists[, i], bw = .0015), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$asc1 - rates$asc2,, bw = .0015), lty=3, lwd=2)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
# get fusions
dists <- matrix(NA,2500,1000)
for(i in 1:1000){
sel.trees <- sample(1:100, replace=T)
sel.rows <- as.vector(treerows[,sel.trees])
dists[, i] <- rates$desc1[sel.rows] - rates$desc2[sel.rows]
}
# plot fusions
plot(0,0,col="white",
ylim=c(-5,165),
xlim=c(-.025,.03),
xlab=expression(paste(Delta, R[fusion])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0015), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$desc1 - rates$desc2,, bw = .0015), lty=3, lwd=2)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
# get polyploidy
dists <- matrix(NA,2500,1000)
for(i in 1:1000){
sel.trees <- sample(1:100, replace=T)
sel.rows <- as.vector(treerows[,sel.trees])
dists[, i] <- rates$pol1[sel.rows] - rates$pol2[sel.rows]
}
# plot polyploidy
plot(0,0,col="white",
ylim=c(-5,1400),
xlim=c(-.002,.002),
xlab=expression(paste(Delta, R[polyploidy])),
ylab="density")
for(i in 1:1000){
lines(density(dists[, i], bw = .0001), col = cols[i],lwd=.09)
highs[i] <- HPDinterval(as.mcmc(dists[,i]))[2]
lows[i] <- HPDinterval(as.mcmc(dists[,i]))[1]
}
lines(density(rates$pol1 - rates$pol2,, bw = .0001), lty=3, lwd=2)
lines(y=c(-5,-5),x=c(max(lows),min(highs)),lwd=3)
library(chromePlus)
library(chromePlus)
library(diversitree)
help(tree)
help(trees)
tree.bd(pars = c(3,1), max.taxa=100)
tree <- tree.bd(pars = c(3,1), max.taxa=100)
tree <- tree.bd(pars = c(3,1), max.taxa=100)
plot(tree)
set.seed(1)
tree <- tree.bd(pars = c(3,1), max.taxa=100)
# set seed
set.seed(1)
# simulate a phylogeny under birth death model
tree <- tree.bd(pars = c(3,1), max.taxa=100)
# scale the tree to unit length
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree)
fastdat <- simChrom(tree, pars=c(.2, .2, 0, 0, 10),
limits = c(1, 100), model = "2010")
# simulate chromosome number evolution
# we will simulate 1000 datasets with
# a fusion and fission rate of .1 (slowdat)
# and an additional 1000 datasets with
# a fusion and fission rate of .2 (fastdat)
fastdat <- slowdat <- matrix(NA, 100, 1000)
fastdat <- slowdat <- matrix(NA, 100, 1000)
for(i in 1:1000){
fastdat[, i] <- simChrom(tree, pars=c(.2, .2, 0, 0, 10),
limits = c(1, 100), model = "2010")
slowdat[, i] <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 100), model = "2010")
}
View(fastdat)
# simulate chromosome number evolution
# we will simulate 1000 datasets with
# a fusion and fission rate of .1 (slowdat)
# and an additional 1000 datasets with
# a fusion and fission rate of .2 (fastdat)
fastdat <- slowdat <- matrix(NA, 100, 1000)
for(i in 1:1000){
print(i)
fastdat[, i] <- simChrom(tree, pars=c(.2, .2, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowdat[, i] <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
}
max(fastdat)
max(slowdat)
min(slowdat)
min(fastdat)
# simulate chromosome number evolution
# we will simulate 1000 datasets with
# a fusion and fission rate of .1 (slowdat)
# and an additional 1000 datasets with
# a fusion and fission rate of .2 (fastdat)
fastdat <- slowdat <- matrix(NA, 100, 1000)
for(i in 1:1000){
print(i)
fastdat[, i] <- simChrom(tree, pars=c(.4, .4, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowdat[, i] <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
}
max(fastdat)
max(slowdat)
min(slowdat)
min(fastdat)
hist(fastdat)
hist(slowdat)
# reshape data for ggplot
chroms <- c(as.vector(fastdat),as.vector(slowdat))
mod <- c(rep("fast",100000),rep("slow",100000)
df <- data.frame(chroms, mod)
# reshape data for ggplot
chroms <- c(as.vector(fastdat),as.vector(slowdat))
mod <- c(rep("fast",100000),rep("slow",100000)
)
mod <- c(rep("fast",100000),rep("slow",100000))
df <- data.frame(chroms, mod)
ggplot(df, aes(x=chroms, color=mod)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
library(ggplot2)
ggplot(df, aes(x=chroms, color=mod)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
for(i in 1:100){
print(i)
fastdat[, i] <- simChrom(tree, pars=c(.6, .6, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowdat[, i] <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
}
# reshape data for ggplot
chroms <- c(as.vector(fastdat),as.vector(slowdat))
mod <- c(rep("fast",10000),rep("slow",10000))
df <- data.frame(chroms, mod)
library(ggplot2)
ggplot(df, aes(x=chroms, color=mod)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
# simulate chromosome number evolution
# we will simulate 1000 datasets with
# a fusion and fission rate of .1 (slowdat)
# and an additional 1000 datasets with
# a fusion and fission rate of .2 (fastdat)
fastdat <- slowdat <- matrix(NA, 100, 100)
for(i in 1:100){
print(i)
fastdat[, i] <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowdat[, i] <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
}
# reshape data for ggplot
chroms <- c(as.vector(fastdat),as.vector(slowdat))
mod <- c(rep("fast",10000),rep("slow",10000))
df <- data.frame(chroms, mod)
library(ggplot2)
ggplot(df, aes(x=chroms, color=mod)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
# simulate chromosome number evolution
# we will simulate 100 datasets with
# a fusion and fission rate of .1 (slowdat)
# and an additional 100 datasets with
# a fusion and fission rate of 1 (fastdat)
# for each simulation we will record the minimum and maximum
# chromosome number
fastmax <- fastmin <- slowmax <- slowmin <- c()
for(i in 1:100){
print(i)
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
fastmax[i] <- max(temp)
fastmin[i] <- min(temp)
temp <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowmax[i] <- max(temp)
slowmin[i] <- min(temp)
}
plot(density(fastmax))
plot(density(slowmax))
plot(density(fastmin))
for(i in 1:1000){
print(i)
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
fastmax[i] <- max(temp)
fastmin[i] <- min(temp)
temp <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowmax[i] <- max(temp)
slowmin[i] <- min(temp)
}
plot(density(fastmin),
xlim=c(3,16))
plot(0,0,col="white"
xlim=c(3,16))
plot(0,0,col="white",
xlim=c(3,16))
plot(0,0,col="white",
xlim=c(3,16),
xlab="chromosome number",
ylab="count")
fastmax <- as.data.frame(table(fastmax))
View(fastmax)
# chromosome number
fastmax <- fastmin <- slowmax <- slowmin <- c()
for(i in 1:1000){
print(i)
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
fastmax[i] <- max(temp)
fastmin[i] <- min(temp)
temp <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowmax[i] <- max(temp)
slowmin[i] <- min(temp)
}
plot(0,0,col="white",
xlim=c(3,16),
xlab="chromosome number",
ylab="count")
fastmax <- as.data.frame(table(fastmax))
fastmin <- as.data.frame(table(fastmin))
slowmax <- as.data.frame(table(slowmax))
slowmin <- as.data.frame(table(slowmin))
barplot(fastmax)
barplot(height=fastmax$Freq, at=fastmax$fastmax)
plot(0,0,col="white",
xlim=c(3,16),
xlab="chromosome number",
ylab="count")
View(slowmax)
plot(0,0,col="white",
xlim=c(3,16),
ylim=c(0,800)
xlab="chromosome number",
ylab="count")
plot(0,0,col="white",
xlim=c(3,16),
ylim=c(0,800)
xlab="chromosome number",
ylab="count")
plot(0,0,col="white",
xlim=c(3,16),
ylim=c(0,800),
xlab="chromosome number",
ylab="count")
barplot(height=fastmax$Freq, at=fastmax$fastmax, add=T)
fastmax$fastmax
barplot(height=fastmax$Freq, at=as.numeric(fastmax$fastmax), add=T)
plot(0,0,col="white",
xlim=c(3,16),
ylim=c(0,800),
xlab="chromosome number",
ylab="count")
barplot(height=fastmax$Freq, at=as.numeric(fastmax$fastmax), add=T)
as.numeric(fastmax$fastmax)
fastmax$fastmax
levels(fastmax$fastmax)
as.numeric(levels(fastmax$fastmax))
plot(0,0,col="white",
xlim=c(3,16),
ylim=c(0,800),
xlab="chromosome number",
ylab="count")
barplot(height=fastmax$Freq, at=as.numeric(levels(fastmax$fastmax)), add=T)
help("barplot")
fastmax$Freq
hist(fastmax)
fastmax <- fastmin <- slowmax <- slowmin <- c()
for(i in 1:1000){
print(i)
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
fastmax[i] <- max(temp)
fastmin[i] <- min(temp)
temp <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowmax[i] <- max(temp)
slowmin[i] <- min(temp)
}
help(histogram)
fastmax <- fastmin <- slowmax <- slowmin <- c()
for(i in 1:1000){
print(i)
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
fastmax[i] <- max(temp)
fastmin[i] <- min(temp)
temp <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowmax[i] <- max(temp)
slowmin[i] <- min(temp)
}
# fastmax <- as.data.frame(table(fastmax))
# fastmin <- as.data.frame(table(fastmin))
# slowmax <- as.data.frame(table(slowmax))
# slowmin <- as.data.frame(table(slowmin))
df <- data.frame(fastmax.fastmin, slowmax, slowmin)
# fastmax <- as.data.frame(table(fastmax))
# fastmin <- as.data.frame(table(fastmin))
# slowmax <- as.data.frame(table(slowmax))
# slowmin <- as.data.frame(table(slowmin))
df <- data.frame(fastmax, fastmin, slowmax, slowmin)
# fastmax <- as.data.frame(table(fastmax))
# fastmin <- as.data.frame(table(fastmin))
# slowmax <- as.data.frame(table(slowmax))
# slowmin <- as.data.frame(table(slowmin))
df <- data.frame(c(fastmax, fastmin, slowmax, slowmin),
# fastmax <- as.data.frame(table(fastmax))
# fastmin <- as.data.frame(table(fastmin))
# slowmax <- as.data.frame(table(slowmax))
# slowmin <- as.data.frame(table(slowmin))
df <- data.frame(c(fastmax, fastmin, slowmax, slowmin),
rep(c("fastmax","fastmin","slowmax","slowmin"),
each=1000))
colnames(df) <- c("chromosome number","model")
colnames(df) <- c("chromnumber","model")
# fastmax <- as.data.frame(table(fastmax))
# fastmin <- as.data.frame(table(fastmin))
# slowmax <- as.data.frame(table(slowmax))
# slowmin <- as.data.frame(table(slowmin))
df <- data.frame(c(fastmax, fastmin, slowmax, slowmin),
rep(c("fastmax","fastmin","slowmax","slowmin"),
each=1000))
colnames(df) <- c("chromnumber","model")
ggplot(data = df, aes(x = chromnumber, fill = model)) +
geom_histogram(position = "dodge")
ggplot(data = df, aes(x = chromnumber, fill = model)) +
geom_histogram(position = "dodge", binwidth = 1)
# load packages
library(chromePlus)
library(diversitree)
# set seed
set.seed(1)
# simulate a phylogeny under birth death model
tree <- tree.bd(pars = c(3,1), max.taxa=100)
# scale the tree to unit length
tree$edge.length <- tree$edge.length/max(branching.times(tree))
# simulate chromosome number evolution
# we will simulate 100 datasets with
# a fusion and fission rate of .1 (slowdat)
# and an additional 100 datasets with
# a fusion and fission rate of 1 (fastdat)
# for each simulation we will record the minimum and maximum
# chromosome number
fastmax <- fastmin <- slowmax <- slowmin <- c()
for(i in 1:1000){
print(i)
temp <- simChrom(tree, pars=c(1, 1, 0, 0, 10),
limits = c(1, 20), model = "2010")
fastmax[i] <- max(temp)
fastmin[i] <- min(temp)
temp <- simChrom(tree, pars=c(.1, .1, 0, 0, 10),
limits = c(1, 20), model = "2010")
slowmax[i] <- max(temp)
slowmin[i] <- min(temp)
}
df <- data.frame(c(fastmax, fastmin, slowmax, slowmin),
rep(c("fastmax","fastmin","slowmax","slowmin"),
each=1000))
colnames(df) <- c("chromnumber","model")
ggplot(data = df, aes(x = chromnumber, fill = model)) +
geom_histogram(position = "dodge", binwidth = 1)
