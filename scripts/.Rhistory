library(ape)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, show.tip.label=F)
library(phangorn)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
dat <- matrix(NA, 20, length(data[[1]]))
for(i in 1:20){
dat[i,1:(length(data[[1]]))] <- data[[i]]
}
fit <- prcomp(dat)
pcs <- fit$x
row.names(pcs) <- tree$tip.label
plot(tree, cex=.5)
plot(pcs[,2]~pcs[,1], col=c(rep("black",16),rep("red",4)))
library(ape)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, show.tip.label=F)
library(phangorn)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
dat <- matrix(NA, 20, length(data[[1]]))
for(i in 1:20){
dat[i,1:(length(data[[1]]))] <- data[[i]]
}
fit <- prcomp(dat)
pcs <- fit$x
row.names(pcs) <- tree$tip.label
plot(tree, cex=.5)
plot(pcs[,2]~pcs[,1], col=c(rep("black",16),rep("red",4)))
library(ape)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, show.tip.label=F)
library(phangorn)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
dat <- matrix(NA, 20, length(data[[1]]))
for(i in 1:20){
dat[i,1:(length(data[[1]]))] <- data[[i]]
}
fit <- prcomp(dat)
pcs <- fit$x
row.names(pcs) <- tree$tip.label
plot(tree, cex=.5)
plot(pcs[,2]~pcs[,1], col=c(rep("black",16),rep("red",4)))
library(ape)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, show.tip.label=F)
library(phangorn)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
dat <- matrix(NA, 20, length(data[[1]]))
for(i in 1:20){
dat[i,1:(length(data[[1]]))] <- data[[i]]
}
fit <- prcomp(dat)
pcs <- fit$x
row.names(pcs) <- tree$tip.label
plot(tree, cex=.5)
plot(pcs[,2]~pcs[,1], col=c(rep("black",16),rep("red",4)))
library(ape)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, show.tip.label=F)
library(phangorn)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
dat <- matrix(NA, 20, length(data[[1]]))
for(i in 1:20){
dat[i,1:(length(data[[1]]))] <- data[[i]]
}
fit <- prcomp(dat)
pcs <- fit$x
row.names(pcs) <- tree$tip.label
plot(tree, cex=.5)
plot(pcs[,2]~pcs[,1], col=c(rep("black",16),rep("red",4)))
library(ape)
library(phangorn)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, cex=.5)
library(phangorn)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
plot(pcs[,2]~pcs[,1]
plot(pcs[,2]~pcs[,1])
library(ape)
library(phangorn)
set.seed(2)
tree <- rcoal(20)
tree$edge.length <- tree$edge.length/max(branching.times(tree))
plot(tree, cex=.5)
data <- simSeq(tree, l=300, Q=1:6,type="DNA")
DNA <- matrix(NA, 20, length(data[[1]]))
for(i in 1:20){
DNA[i,1:(length(data[[1]]))] <- data[[i]]
}
fit <- prcomp(DNA)
pcs <- fit$x
row.names(pcs) <- tree$tip.label
plot(pcs[,2]~pcs[,1])
plot(tree, cex=.5)
View(DNA)
View(pcs)
plot(tree, cex=.5)
plot(pcs[,2]~pcs[,1], col=c(rep("black",12),rep("blue", 4), rep("red",4)))
plot(pcs[,3]~pcs[,4], col=c(rep("black",12),rep("blue", 4), rep("red",4)))
prcomp(DNA)
pcs2 <- prcomp(DNA)
plot(pcs2[,1], pcs2[,1])
View(pcs2)
plot(pcs2$x[,1], pcs2$x[,1])
plot(pcs2$x[,2], pcs2$x[,1])
plot(pcs[,2]~pcs[,1], col=c(rep("black",12),rep("blue", 4), rep("red",4)))
plot(pcs2$x[,2], pcs2$x[,1])
plot(pcs2$x[,2], pcs2$x[,1], col=c(rep("black",12),rep("blue", 4), rep("red",4)))
library(FactoMineR)
install.packages("FactoMineR")
result <- PCA(DNA)
library(FactoMineR)
result <- PCA(DNA)
install.packages("car")
install.packages("car")
install.packages("FactoMineR")
install.packages("FactoMineR")
data("iris")
head(iris)
head(iris)
pca <- prcomp(iris[,1:4])
names(pca)
y <- pca$sdev^2*100
y <- pca$sdev^2
(pca$sdev^2 / sum(pca$dev^2))
pca$sdev^2
sum(pca$dev^2)
pca$dev^2
(pca$sdev^2 / sum(pca$sdev^2))
y <- (pca$sdev^2 / sum(pca$sdev^2)) * 100
barplot(y,
names.arg=c("PC1","PC2","PC3","PC4"),
ylab="Percent variance captured",
xlab="",
main="")
names(pca)
plot(pca$x[,2] ~ pca$x[,1])
iris$Species
rainbow(3)
plot(pca$x[,2] ~ pca$x[,1],
col= rainbow(3)[iris$Species])
plot(pca$x[,2] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7)
plot(pca$x[,2] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
plot(pca$x[,3] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
plot(pca$x[,4] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
plot(pca$x[,2] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
library(FactoMineR)
pca2 <- PCA(iris[,1:4], graph=T)
names(pca)
iris2 <- iris
iris2$Sepal.Length <- log(iris2$Sepal.Length)
iris2$Sepal.Width <- log(iris2$Sepal.Width)
iris2$Petal.Length <- log(iris2$Petal.Length)
iris2$Petal.Width <- log(iris2$Petal.Width)
pca2 <- prcomp(iris2[,1:4])
pca2 <- prcomp(iris2[,1:4])
par(mfcol=c(1,2))
plot(pca$x[,2] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
plot(pca2$x[,2] ~ pca2$x[,1],
col= rainbow(3)[iris2$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
iris[150, 1]
hist(iris[,1])
iris[150, 1] <- 150
pca <- prcomp(iris[,1:4])
pca <- prcomp(iris[,1:4])
plot(pca$x[,2] ~ pca$x[,1],
col= rainbow(3)[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
data(iris)
species <- as.character(iris$Species)
iris[151, 1:4] <- c(7,3.1,4.5,1.3)
iris$Species <- as.factor(c(species, "unknown"))
View(iris)
library(car)
pca <- prcomp(iris[,1:4])
names(pca)
iris$Species
c("red","green", "brown", "blue")
plot(pca$x[,2] ~ pca$x[,1],
col= c("red","green", "brown", "blue")[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
help("dataEllipse")
View(iris)
iris$Species
dataEllips(x=pca$x[1:50, 1]
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.95,
col="red")
dataEllips(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.95,
col="red")
dataEllipse(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.95,
col="red")
plot(pca$x[,2] ~ pca$x[,1],
col= c("red","green", "brown", "blue")[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
dataEllipse(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.95,
col="red",
center=F)
plot(pca$x[,2] ~ pca$x[,1],
col= c("red","green", "brown", "blue")[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
dataEllipse(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.95,
col="red",
center.pch=F)
plot(pca$x[,2] ~ pca$x[,1],
col= c("red","green", "brown", "blue")[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
dataEllipse(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.5,
col="red",
center.pch=F)
dataEllipse(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.99,
col="red",
center.pch=F)
plot(pca$x[,2] ~ pca$x[,1],
col= c("red","green", "brown", "blue")[iris$Species],
pch=16,
cex=.7,
xlab="PC1",ylab="PC2")
dataEllipse(x=pca$x[1:50, 1],
y=pca$x[1:50, 2],
add = T,
plot.points=F,
levels=.95,
col="red",
center.pch=F)
dataEllipse(x=pca$x[51:100, 1],
y=pca$x[51:100, 2],
add = T,
plot.points=F,
levels=.95,
col="brown",
center.pch=F)
dataEllipse(x=pca$x[101:150, 1],
y=pca$x[101:150, 2],
add = T,
plot.points=F,
levels=.95,
col="blue",
center.pch=F)
load("~/Desktop/Dropbox/gitrepos/holocentric/results/centromere.rates.RData")
foo <- results[[4]]
plot(results[[1]]$p,type="l")
for(i in 2:100) lines(results[[i]]$p, col=rainbow(100)[i])
plot(results[[1]]$p,type="l", ylim=c(-1800,-1650))
for(i in 2:100) lines(results[[i]]$p, col=rainbow(100)[i])
plot(results[[1]]$p,type="l", ylim=c(-1800,-1550))
for(i in 2:100) lines(results[[i]]$p, col=rainbow(100)[i])
rates <- results[[1]][26,50,]
rates <- results[[1]][26:50,]
View(rates)
rates <- results[[1]][26:50,]
for(i in 2:100){
rbind(rates, results[[i]][26:50,])
}
rates <- results[[1]][26:50,]
for(i in 2:100){
rates <- rbind(rates, results[[i]][26:50,])
}
View(rates)
plot(density(rates$asc1))
lines(density(rates$asc2))
plot(density(rates$asc1),col="red")
lines(density(rates$asc2))
plot(density(rates$desc1),col="red")
lines(density(rates$desc2))
plot(density(rates$pol1),col="red")
lines(density(rates$pol2))
plot(density(rates$asc1-rates$asc2),col="red")
plot(density(rates$desc1-rates$desc2),col="red")
plot(density(rates$pol1-rates$pol2),col="red")
abline(v=0)
plot(density(rates$asc1-rates$asc2),col="red")
polygon(density(rates$asc1-rates$asc2))
polygon(density(rates$asc1-rates$asc2), col="red")
polygon(density(rates$asc1-rates$asc2), col="red")
plot(density(rates$asc1-rates$asc2),col="red")
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
plot(density(rates$asc1-rates$asc2),col="red")
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,200))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,300))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,900))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2),col=rgb(0,0,1,.1))
density(rates$pol1-rates$pol2)
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=1),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.1),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.01),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.0001),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,500))
abline(v=0)
polygon(density(rates$asc1-rates$asc2), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$desc1-rates$desc2),col=rgb(0,1,0,.1))
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",ylim=c(0,400))
abline(v=0)
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
plot(density(rates$asc1-rates$asc2),col="red",
ylim=c(0,400),
xlim=c(-.02,.02))
abline(v=0)
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
plot(0,0,col="white",
ylim=c(0,400),
xlim=c(-.02,.02))
abline(v=0)
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
plot(0,0,col="white",
ylim=c(0,400),
xlim=c(-.02,.02),
xlab="rate difference",
ylab="density")
abline(v=0)
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
rm(results,foo,i)
save.image("~/Desktop/Dropbox/gitrepos/holocentric/results/cent.rates.RData")
load("~/Desktop/Dropbox/gitrepos/holocentric/results/cent.rates.RData")
load("../results/cent.rates.RData")
setwd("~/Desktop/Dropbox/gitrepos/holocentric/scripts")
load("../results/cent.rates.RData")
plot(0,0,col="white",
ylim=c(0,400),
xlim=c(-.02,.02),
xlab="rate difference",
ylab="density")
abline(v=0)
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
setwd("~/Desktop/Dropbox/gitrepos/holocentric/scripts")
library(phytools)
library(chromePlus)
library(viridis)
trees <- read.nexus("../data/misof.backbone.nex")
#trees <- read.nexus("../data/rainford.backbone.nex")
dat <- read.csv("../data/data.invert.csv", as.is=T)
source("functions.R")
foo <- getData2(trees, dat)
tree <- foo[[1]][[1]]
dat <- foo[[2]]
# mono is zero
chrom.type <- dat$chrom
names(chrom.type) <- dat$genus
new.haps <- round(log(dat$haploid)*10)
range(new.haps)
maps.est <- make.simmap(tree = tree,
x = chrom.type,
model = "ARD",
pi = "estimated",
nsim=100)
smap.est <- densityMap(trees = maps.est,
res=50, lwd=.75,
check=FALSE,
type="fan",
direction="rightwards",
fsize=.25)
smap.est2 <- setMap(smap.est, c("gray", "black"))
plot(smap.est2, fsize=c(.00001, .4),
lwd=.95,type="fan")
cols <- viridis(38)
tip.cols <- c()
foo <- c()
for(i in 1:length(tree$tip.label)){
hit <- new.haps[dat$genus == tree$tip.label[i]]
foo[i] <- hit
tip.cols[i] <- cols[(hit-6)]
}
tiplabels(pch=16, col = tip.cols, cex=.45)
load("../results/cent.rates.RData")
plot(0,0,col="white",
ylim=c(0,400),
xlim=c(-.02,.02),
xlab="rate difference",
ylab="density")
abline(v=0)
polygon(density(rates$asc1-rates$asc2,bw=.001), col=rgb(1,0,0,.1))
polygon(density(rates$desc1-rates$desc2,bw=.001),col=rgb(0,1,0,.1))
polygon(density(rates$pol1-rates$pol2,bw=.001),col=rgb(0,0,1,.1))
load("~/Desktop/Dropbox/gitrepos/holocentric/results/munged.data.RData")
